openapi: "3.0.0"
info:
  version: 1.0.1
  title: Blockstream Esplora HTTP API
  description: JSON over RESTful HTTP. Amounts are always represented in satoshis.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://blockstream.info/api
    description: Bitcoin Mainnet. Does not index provably unspendable transactions - cannot query by OP_RETURN
  - url: https://btc-testnet.interlay.io
    description: Bitcoin Testnet. Indexes provably unspendable transactions - can query by OP_RETURN
paths:
  /tx/{txId}:
    get:
      summary: Returns information about the transaction.
      operationId: getTx
      tags:
        - tx
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Transaction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
  /tx/{txId}/status:
    get:
      summary: Returns the transaction confirmation status.
      operationId: getTxStatus
      tags:
        - tx
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Transaction status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /tx/{txId}/hex:
    get:
      summary: Returns the raw transaction in hex.
      operationId: getTxHex
      tags:
        - tx
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Transaction in hex format
          content:
            text/plain:
              schema:
                type: string
  /tx/{txId}/raw:
    get:
      summary: Returns the raw transaction as binary data.
      operationId: getTxRaw
      tags:
        - tx
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Transaction in binary format
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /tx/{txId}/merkleblock-proof:
    get:
      summary: Returns a merkle inclusion proof for the transaction using bitcoind's merkleblock format.
      operationId: getTxMerkleBlockProof
      tags:
        - tx
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Merkle proof
          content:
            text/plain:
              schema:
                type: string
  /tx/{txId}/merkle-proof:
    get:
      summary: Returns a merkle inclusion proof for the transaction using Electrum's blockchain.transaction.get_merkle format.
      operationId: getTxMerkleProof
      tags:
        - tx
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Merkle branch to a confirmed transaction
          content:
            text/plain:
              schema:
                type: object
                required:
                  - merkle
                  - block_height
                  - pos
                properties:
                  merkle:
                    type: array
                    description: A list of transaction hashes the current hash is paired with, deepest pairing first.
                    items:
                      type: string
                  block_height:
                    type: number
                    description: The height of the block the transaction was confirmed in.
                  pos:
                    type: number
                    description: The 0-based index of the position of the transaction in the ordered list of transactions in the block.
  /tx/{txId}/outspend/{vout}:
    get:
      summary: Returns the spending status of a transaction output.
      operationId: getTxOutspend
      tags:
        - tx
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
        - name: vout
          in: path
          required: true
          schema:
            type: number
      responses:
        default:
          description: Spending status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Spend"
  /tx/{txId}/outspends:
    get:
      summary: Returns the spending status of all transaction outputs.
      operationId: getAllTxOutspends
      tags:
        - tx
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: All spending statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Spend"
  /tx:
    post:
      summary: Broadcast a raw transaction to the network.
      operationId: postTx
      tags:
        - tx
      requestBody:
        description: The transaction should be provided as hex in the request body.
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: The txid will be returned on success.
          content:
            application/json:
              schema:
                type: string
  /address/{address}:
    get:
      summary: Get information about an address.
      operationId: getAddress
      tags:
        - address
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Account metrics
          content:
            application/json:
              schema:
                type: object
                required:
                  - address
                  - chain_stats
                  - mempool_stats
                properties:
                  address:
                    type: string
                  chain_stats:
                    type: object
                    properties:
                      funded_txo_count:
                        type: number
                      funded_txo_sum:
                        type: number
                      spent_txo_count:
                        type: number
                      spent_txo_sum:
                        type: number
                      tx_count:
                        type: number
                  mempool_stats:
                    type: object
                    properties:
                      funded_txo_count:
                        type: number
                      funded_txo_sum:
                        type: number
                      spent_txo_count:
                        type: number
                      spent_txo_sum:
                        type: number
                      tx_count:
                        type: number
  /address/{address}/txs:
    get:
      summary: Get transaction history for the specified address, sorted with newest first.
      operationId: getAddressTxHistory
      tags:
        - address
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Returns up to 50 mempool transactions plus the first 25 confirmed transactions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /address/{address}/txs/mempool:
    get:
      summary: Get unconfirmed transaction history for the specified address.
      operationId: getAddressTxMempool
      tags:
        - address
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Returns up to 50 transactions (no paging).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /address/{address}/utxo:
    get:
      summary: Get the list of unspent transaction outputs associated with the address.
      operationId: getAddressUtxo
      tags:
        - address
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Unspent tx outputs.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UTXO"
  /block/{hash}:
    get:
      summary: Returns information about a block.
      operationId: getBlock
      tags:
        - block
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Block info
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - height
                  - version
                  - timestamp
                  - bits
                  - nonce
                  - merkle_root
                  - tx_count
                  - size
                  - weight
                  - previousblockhash
                properties:
                  id:
                    type: string
                  height:
                    type: number
                  version:
                    type: number
                  timestamp:
                    type: number
                  bits:
                    type: number
                  nonce:
                    type: number
                  merkle_root: 
                    type: string
                  tx_count:
                    type: number
                  size:
                    type: number
                  weight:
                    type: number
                  previousblockhash:
                    type: string
  /block/{hash}/header:
    get:
      summary: Returns the hex-encoded block header.
      operationId: getBlockHeader
      tags:
        - block
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Block header
          content:
            application/json:
              schema:
                type: string
  /block/{hash}/status:
    get:
      summary: Returns the block status.
      operationId: getBlockStatus
      tags:
        - block
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Block status
          content:
            application/json:
              schema:
                type: object
                required:
                  - in_best_chain
                properties:
                  in_best_chain:
                    type: boolean
                  height:
                    type: number
                  next_best:
                    type: string
  /block/{hash}/txids:
    get:
      summary: Returns a list of all txids in the block.
      operationId: getBlockTxids
      tags:
        - block
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Block transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /block/{hash}/txid/{index}:
    get:
      summary: Returns the transaction at index :index within the specified block.
      operationId: getBlockTxByIndex
      tags:
        - block
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
        - name: index
          in: path
          required: true
          schema:
            type: number
      responses:
        default:
          description: Block transaction
          content:
            application/json:
              schema:
                type: string
  /block/{hash}/raw:
    get:
      summary: Returns the raw block representation in binary.
      operationId: getBlockRaw
      tags:
        - block
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Block in binary format
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /block-height/{height}:
    get:
      summary: Returns the hash of the block currently at height.
      operationId: getBlockAtHeight
      tags:
        - block
      parameters:
        - name: height
          in: path
          required: true
          schema:
            type: number
      responses:
        default:
          description: Block hash
          content:
            application/json:
              schema:
                type: string
  /blocks/tip/height:
    get:
      summary: Returns the height of the last block.
      operationId: getLastBlockHeight
      tags:
        - block
      responses:
        default:
          description: Block height
          content:
            application/json:
              schema:
                type: number
  /blocks/tip/hash:
    get:
      summary: Returns the hash of the last block.
      operationId: getLastBlockHash
      tags:
        - block
      responses:
        default:
          description: Block hash
          content:
            application/json:
              schema:
                type: string
  /mempool:
    get:
      summary: Get mempool backlog statistics.
      operationId: getMempool
      tags:
        - mempool
      responses:
        default:
          description: Object with mempool count and size.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mempool"
  /mempool/txids:
    get:
      summary: Get the full list of txids in the mempool as an array.
      operationId: getMempoolTxids
      tags:
        - mempool
      responses:
        default:
          description: The order of the txids is arbitrary and does not match bitcoind's.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /mempool/recent:
    get:
      summary: Get a list of the last 10 transactions to enter the mempool.
      operationId: getMempoolRecent
      tags:
        - mempool
      responses:
        default:
          description: Each transaction object contains simplified overview data.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - txid
                    - fee
                    - vsize
                    - value
                  properties:
                    txid:
                      type: string
                    fee:
                      type: number
                    vsize:
                      type: number
                    value:
                      type: number
  /fee-estimates:
    get:
      summary: Get an object where the key is the confirmation target (in number of blocks) and the value is the estimated feerate (in sat/vB).
      operationId: getFeeEstimates
      tags:
        - fee-estimates
      responses:
        default:
          description: The available confirmation targets are 1-25, 144, 504 and 1008 blocks.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
  /scripthash/{hash}/txs:
    get:
      summary: Get transaction history for the specified address/scripthash, sorted with newest first. Can be used to query by op_return
      operationId: getTxsByScripthash
      tags:
        - scripthash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Returns up to 50 mempool transactions plus the first 25 confirmed transactions. You can request more confirmed transactions using :last_seen_txid (see other scripthash endpoint).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /scripthash/{hash}/txs/chain:
    get:
      summary: Get confirmed transaction history for the specified address/scripthash, sorted by newest first.
      operationId: getRecentTxsByScripthash
      tags:
        - scripthash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Returns latest 25 transactions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /scripthash/{hash}/txs/chain/{lastSeenTxid}:
    get:
      summary: Get confirmed transaction history for the specified address/scripthash, sorted by newest first.
      operationId: getTxsBeforeTxidByScripthash
      tags:
        - scripthash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
        - name: lastSeenTxid
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Returns 25 transactions per page. More can be requested by specifying the last txid seen by the previous query.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
components:
  schemas:
    Status:
      type: object
      required:
        - confirmed
      properties:
        confirmed:
          type: boolean
        block_height:
          type: number
        block_hash:
          type: string
        block_time:
          type: number
    VOut:
      type: object
      properties:
        scriptpubkey:
          type: string
        scriptpubkey_asm:
          type: string
        scriptpubkey_type:
          type: string
        scriptpubkey_address:
          type: string
        value:
          type: number
    VIn:
      type: object
      properties:
        txid:
          type: string
        vout:
          type: number
        is_coinbase:
          type: boolean
        scriptsig:
          type: string
        scriptsig_asm:
          type: string
        inner_redeemscript_asm:
          type: string
        inner_witnessscript_asm:
          type: string
        sequence:
          type: number
        witness:
          type: array
          items:
            type: string
        prevout:
          $ref: "#/components/schemas/VOut"
    Transaction:
      type: object
      required:
        - txid
        - version
      properties:
        txid:
          type: string
        version:
          type: number
        locktime:
          type: number
        vin:
          type: array
          items:
            $ref: "#/components/schemas/VIn"
        vout:
          type: array
          items:
            $ref: "#/components/schemas/VOut"
        size:
          type: number
        weight:
          type: number
        fee:
          type: number
        status:
          $ref: "#/components/schemas/Status"
    Spend:
      type: object
      required:
        - spent
      properties:
        spent:
          type: boolean
        txid:
          type: string
        vin:
          type: string
        status:
          $ref: "#/components/schemas/Status"
    UTXO:
      type: object
      required:
        - txid
        - vout
        - value
      properties:
        txid:
          type: string
        vout:
          type: integer
          format: int64
        value:
          type: integer
          format: int64
        status:
          $ref: "#/components/schemas/Status"
    Mempool:
      type: object
      required:
        - count
        - vsize
        - total_fee
        - fee_histogram
      properties:
        count:
          type: number
        vsize:
          type: number
        total_fee:
          type: number
        fee_histogram:
          type: array
          items:
            type: array
            items:
              type: number
            minItems: 2
            maxItems: 2



